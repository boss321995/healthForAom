import React, { useState } from 'react';
import axios from 'axios';

const PostRegistrationAssessment = ({ onComplete, onSkip }) => {
  const [currentStep, setCurrentStep] = useState(1);
  const [loading, setLoading] = useState(false);
  const [formData, setFormData] = useState({
    // Lifestyle Assessment
    smoking_status: 'never',
    smoking_years: '',
    smoking_pack_per_day: '',
    smoking_quit_attempts: '',
    
    alcohol_frequency: 'never',
    alcohol_type: '',
    alcohol_amount: '',
    alcohol_binge_frequency: 'never',
    
    exercise_frequency: 'never',
    exercise_type: '',
    exercise_duration: '',
    exercise_intensity: 'light',
    
    sleep_hours: '',
    sleep_quality: 'good',
    sleep_problems: [],
    
    stress_level: 'low',
    stress_sources: [],
    coping_mechanisms: [],
    
    // Diet & Nutrition
    diet_type: 'mixed',
    vegetable_servings: '',
    fruit_servings: '',
    water_intake: '',
    fast_food_frequency: 'rarely',
    snack_frequency: 'sometimes',
    caffeine_intake: 'moderate',
    
    // Allergies & Medical History
    food_allergies: '',
    drug_allergies: '',
    environmental_allergies: '',
    current_medications: '',
    supplement_usage: '',
    medical_conditions: '',
    family_history: '',
    previous_surgeries: '',
    
    // Work & Environment
    work_environment: 'office',
    work_stress_level: 'moderate',
    screen_time_hours: '',
    commute_type: 'car',
    exposure_to_chemicals: 'no',
    
    // Mental Health
    mood_changes: 'no',
    anxiety_frequency: 'rarely',
    social_activities: 'sometimes',
    mental_health_support: 'no',
    
    // Additional Health Info
    menstrual_cycle: '', // for females
    pregnancy_plans: '', // for females
    contraceptive_use: '', // for females
    vaccination_status: 'up_to_date',
    recent_health_changes: '',
    health_goals: [],
    
    // Symptoms
    current_symptoms: [],
    chronic_symptoms: []
  });

  const totalSteps = 6;

  const handleInputChange = (field, value) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const handleArrayInputChange = (field, item, checked) => {
    setFormData(prev => ({
      ...prev,
      [field]: checked 
        ? [...prev[field], item]
        : prev[field].filter(i => i !== item)
    }));
  };

  const nextStep = () => {
    if (currentStep < totalSteps) {
      setCurrentStep(currentStep + 1);
    }
  };

  const prevStep = () => {
    if (currentStep > 1) {
      setCurrentStep(currentStep - 1);
    }
  };

  const handleSubmit = async () => {
    setLoading(true);
    try {
      const token = localStorage.getItem('healthToken');
      
      if (token && !token.startsWith('mock-jwt-token-')) {
        // Send to real backend
        const headers = { Authorization: `Bearer ${token}` };
        await axios.post('http://localhost:5000/api/health-assessment', formData, { headers });
        console.log('‚úÖ Health assessment saved to backend');
      } else {
        // Save to localStorage for mock
        localStorage.setItem('healthAssessment', JSON.stringify(formData));
        console.log('üìù Health assessment saved to localStorage (mock)');
      }
      
      onComplete && onComplete(formData);
    } catch (error) {
      console.error('Error saving health assessment:', error);
      // Save to localStorage as fallback
      localStorage.setItem('healthAssessment', JSON.stringify(formData));
      onComplete && onComplete(formData);
    } finally {
      setLoading(false);
    }
  };

  const renderStepIndicator = () => (
    <div className="mb-8">
      <div className="flex items-center justify-between mb-4">
        <h2 className="text-2xl font-bold text-blue-800">‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</h2>
        <span className="text-sm text-blue-600 bg-blue-100 px-3 py-1 rounded-full">
          ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô {currentStep}/{totalSteps}
        </span>
      </div>
      <div className="w-full bg-gray-200 rounded-full h-2">
        <div 
          className="bg-gradient-to-r from-blue-500 to-green-500 h-2 rounded-full transition-all duration-300"
          style={{ width: `${(currentStep / totalSteps) * 100}%` }}
        />
      </div>
      <p className="text-sm text-gray-600 mt-2">
        ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ AI ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡∏µ‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏à‡∏≤‡∏∞‡∏à‡∏á‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô
      </p>
    </div>
  );

  const renderStep1 = () => (
    <div className="space-y-6">
      <h3 className="text-xl font-semibold text-gray-800 mb-4 flex items-center">
        <span className="mr-2">üö¨</span>
        ‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°‡πÅ‡∏≠‡∏•‡∏Å‡∏≠‡∏Æ‡∏≠‡∏•‡πå
      </h3>
      
      {/* Smoking */}
      <div className="bg-red-50 border border-red-200 rounded-lg p-4">
        <h4 className="font-medium text-red-800 mb-3">‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà</h4>
        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà
            </label>
            <select
              value={formData.smoking_status}
              onChange={(e) => handleInputChange('smoking_status', e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            >
              <option value="never">‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏™‡∏π‡∏ö</option>
              <option value="current">‡∏™‡∏π‡∏ö‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô</option>
              <option value="former">‡πÄ‡∏Ñ‡∏¢‡∏™‡∏π‡∏ö‡πÅ‡∏ï‡πà‡πÄ‡∏•‡∏¥‡∏Å‡πÅ‡∏•‡πâ‡∏ß</option>
              <option value="occasional">‡∏™‡∏π‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡∏£‡∏≤‡∏ß</option>
            </select>
          </div>
          
          {(formData.smoking_status === 'current' || formData.smoking_status === 'former') && (
            <>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    ‡∏™‡∏π‡∏ö‡∏°‡∏≤‡∏Å‡∏µ‡πà‡∏õ‡∏µ‡πÅ‡∏•‡πâ‡∏ß/‡πÄ‡∏Ñ‡∏¢‡∏™‡∏π‡∏ö
                  </label>
                  <input
                    type="number"
                    min="0"
                    max="80"
                    value={formData.smoking_years}
                    onChange={(e) => handleInputChange('smoking_years', e.target.value)}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    placeholder="‡∏õ‡∏µ"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ã‡∏≠‡∏á‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô
                  </label>
                  <input
                    type="number"
                    min="0"
                    max="10"
                    step="0.5"
                    value={formData.smoking_pack_per_day}
                    onChange={(e) => handleInputChange('smoking_pack_per_day', e.target.value)}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    placeholder="‡∏ã‡∏≠‡∏á"
                  />
                </div>
              </div>
              
              {formData.smoking_status === 'former' && (
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÄ‡∏•‡∏¥‡∏Å
                  </label>
                  <input
                    type="number"
                    min="0"
                    max="20"
                    value={formData.smoking_quit_attempts}
                    onChange={(e) => handleInputChange('smoking_quit_attempts', e.target.value)}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    placeholder="‡∏Ñ‡∏£‡∏±‡πâ‡∏á"
                  />
                </div>
              )}
            </>
          )}
        </div>
      </div>

      {/* Alcohol */}
      <div className="bg-amber-50 border border-amber-200 rounded-lg p-4">
        <h4 className="font-medium text-amber-800 mb-3">‡∏Å‡∏≤‡∏£‡∏î‡∏∑‡πà‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°‡πÅ‡∏≠‡∏•‡∏Å‡∏≠‡∏Æ‡∏≠‡∏•‡πå</h4>
        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∑‡πà‡∏°
            </label>
            <select
              value={formData.alcohol_frequency}
              onChange={(e) => handleInputChange('alcohol_frequency', e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            >
              <option value="never">‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏î‡∏∑‡πà‡∏°</option>
              <option value="rarely">‡∏ô‡∏≤‡∏ô‡πÜ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á (‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏•‡∏∞‡∏Ñ‡∏£‡∏±‡πâ‡∏á)</option>
              <option value="monthly">‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏•‡∏∞‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
              <option value="weekly">‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏•‡∏∞‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
              <option value="few_times_week">‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏•‡∏∞‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
              <option value="daily">‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô</option>
            </select>
          </div>
          
          {formData.alcohol_frequency !== 'never' && (
            <>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡∏î‡∏∑‡πà‡∏°‡∏ö‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
                  </label>
                  <select
                    value={formData.alcohol_type}
                    onChange={(e) => handleInputChange('alcohol_type', e.target.value)}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  >
                    <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</option>
                    <option value="beer">‡πÄ‡∏ö‡∏µ‡∏¢‡∏£‡πå</option>
                    <option value="wine">‡πÑ‡∏ß‡∏ô‡πå</option>
                    <option value="spirits">‡πÄ‡∏´‡∏•‡πâ‡∏≤‡πÅ‡∏£‡∏á</option>
                    <option value="mixed">‡∏ú‡∏™‡∏°</option>
                  </select>
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡πâ‡∏á
                  </label>
                  <select
                    value={formData.alcohol_amount}
                    onChange={(e) => handleInputChange('alcohol_amount', e.target.value)}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  >
                    <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì</option>
                    <option value="1-2_drinks">1-2 ‡πÅ‡∏Å‡πâ‡∏ß</option>
                    <option value="3-4_drinks">3-4 ‡πÅ‡∏Å‡πâ‡∏ß</option>
                    <option value="5-6_drinks">5-6 ‡πÅ‡∏Å‡πâ‡∏ß</option>
                    <option value="7+_drinks">‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 6 ‡πÅ‡∏Å‡πâ‡∏ß</option>
                  </select>
                </div>
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∑‡πà‡∏°‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (Binge Drinking)
                </label>
                <select
                  value={formData.alcohol_binge_frequency}
                  onChange={(e) => handleInputChange('alcohol_binge_frequency', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                >
                  <option value="never">‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢</option>
                  <option value="rarely">‡∏ô‡∏≤‡∏ô‡πÜ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
                  <option value="monthly">‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏•‡∏∞‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
                  <option value="weekly">‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏•‡∏∞‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
                  <option value="frequent">‡∏ö‡πà‡∏≠‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
                </select>
              </div>
            </>
          )}
        </div>
      </div>
    </div>
  );

  const renderStep2 = () => (
    <div className="space-y-6">
      <h3 className="text-xl font-semibold text-gray-800 mb-4 flex items-center">
        <span className="mr-2">üèÉ‚Äç‚ôÇÔ∏è</span>
        ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏ö
      </h3>
      
      {/* Exercise */}
      <div className="bg-green-50 border border-green-200 rounded-lg p-4">
        <h4 className="font-medium text-green-800 mb-3">‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢</h4>
        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢
            </label>
            <select
              value={formData.exercise_frequency}
              onChange={(e) => handleInputChange('exercise_frequency', e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            >
              <option value="never">‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢</option>
              <option value="rarely">‡∏ô‡∏≤‡∏ô‡πÜ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
              <option value="1-2_week">‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏•‡∏∞ 1-2 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
              <option value="3-4_week">‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏•‡∏∞ 3-4 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
              <option value="5+_week">‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏•‡∏∞ 5 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ</option>
              <option value="daily">‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô</option>
            </select>
          </div>
          
          {formData.exercise_frequency !== 'never' && (
            <>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏Å
                  </label>
                  <select
                    value={formData.exercise_type}
                    onChange={(e) => handleInputChange('exercise_type', e.target.value)}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  >
                    <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</option>
                    <option value="walking">‡πÄ‡∏î‡∏¥‡∏ô</option>
                    <option value="running">‡∏ß‡∏¥‡πà‡∏á</option>
                    <option value="cycling">‡∏õ‡∏±‡πà‡∏ô‡∏à‡∏±‡∏Å‡∏£‡∏¢‡∏≤‡∏ô</option>
                    <option value="swimming">‡∏ß‡πà‡∏≤‡∏¢‡∏ô‡πâ‡∏≥</option>
                    <option value="gym">‡∏¢‡∏¥‡∏°/‡πÄ‡∏ß‡∏ó‡πÄ‡∏ó‡∏£‡∏ô‡∏ô‡∏¥‡πà‡∏á</option>
                    <option value="yoga">‡πÇ‡∏¢‡∏Ñ‡∏∞</option>
                    <option value="sports">‡∏Å‡∏µ‡∏¨‡∏≤</option>
                    <option value="dancing">‡πÄ‡∏ï‡πâ‡∏ô‡∏£‡∏≥</option>
                    <option value="mixed">‡∏ú‡∏™‡∏°‡∏´‡∏•‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</option>
                  </select>
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡πâ‡∏á (‡∏ô‡∏≤‡∏ó‡∏µ)
                  </label>
                  <input
                    type="number"
                    min="5"
                    max="300"
                    value={formData.exercise_duration}
                    onChange={(e) => handleInputChange('exercise_duration', e.target.value)}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    placeholder="‡∏ô‡∏≤‡∏ó‡∏µ"
                  />
                </div>
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢
                </label>
                <select
                  value={formData.exercise_intensity}
                  onChange={(e) => handleInputChange('exercise_intensity', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                >
                  <option value="light">‡πÄ‡∏ö‡∏≤ (‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏õ‡∏Å‡∏ï‡∏¥)</option>
                  <option value="moderate">‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á (‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢)</option>
                  <option value="vigorous">‡∏´‡∏ô‡∏±‡∏Å (‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡πÄ‡∏£‡πá‡∏ß‡∏°‡∏≤‡∏Å, ‡πÄ‡∏´‡∏á‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å)</option>
                  <option value="intense">‡∏´‡∏ô‡∏±‡∏Å‡∏°‡∏≤‡∏Å (‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á)</option>
                </select>
              </div>
            </>
          )}
        </div>
      </div>

      {/* Sleep */}
      <div className="bg-purple-50 border border-purple-200 rounded-lg p-4">
        <h4 className="font-medium text-purple-800 mb-3">‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏ö</h4>
        <div className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô
              </label>
              <input
                type="number"
                min="3"
                max="15"
                step="0.5"
                value={formData.sleep_hours}
                onChange={(e) => handleInputChange('sleep_hours', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                placeholder="‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô
              </label>
              <select
                value={formData.sleep_quality}
                onChange={(e) => handleInputChange('sleep_quality', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="excellent">‡∏î‡∏µ‡∏°‡∏≤‡∏Å</option>
                <option value="good">‡∏î‡∏µ</option>
                <option value="fair">‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á</option>
                <option value="poor">‡πÅ‡∏¢‡πà</option>
                <option value="very_poor">‡πÅ‡∏¢‡πà‡∏°‡∏≤‡∏Å</option>
              </select>
            </div>
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠)
            </label>
            <div className="grid grid-cols-2 gap-2">
              {[
                '‡∏ô‡∏≠‡∏ô‡πÑ‡∏°‡πà‡∏´‡∏•‡∏±‡∏ö',
                '‡∏ï‡∏∑‡πà‡∏ô‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô',
                '‡∏ï‡∏∑‡πà‡∏ô‡πÄ‡∏ä‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ',
                '‡∏ô‡∏≠‡∏ô‡∏Å‡∏£‡∏ô',
                '‡∏Ç‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏á‡∏ö',
                '‡∏ù‡∏±‡∏ô‡∏£‡πâ‡∏≤‡∏¢',
                '‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏´‡∏¢‡∏∏‡∏î',
                '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤'
              ].map(problem => (
                <label key={problem} className="flex items-center">
                  <input
                    type="checkbox"
                    checked={formData.sleep_problems.includes(problem)}
                    onChange={(e) => handleArrayInputChange('sleep_problems', problem, e.target.checked)}
                    className="mr-2 text-blue-600 focus:ring-blue-500"
                  />
                  <span className="text-sm">{problem}</span>
                </label>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  const renderStep3 = () => (
    <div className="space-y-6">
      <h3 className="text-xl font-semibold text-gray-800 mb-4 flex items-center">
        <span className="mr-2">ü•ó</span>
        ‡πÇ‡∏†‡∏ä‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏ô
      </h3>
      
      <div className="bg-orange-50 border border-orange-200 rounded-lg p-4">
        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏ô
            </label>
            <select
              value={formData.diet_type}
              onChange={(e) => handleInputChange('diet_type', e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            >
              <option value="mixed">‡∏ú‡∏™‡∏° (‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏™‡∏±‡∏ï‡∏ß‡πå + ‡∏û‡∏∑‡∏ä)</option>
              <option value="vegetarian">‡∏°‡∏±‡∏á‡∏™‡∏ß‡∏¥‡∏£‡∏±‡∏ï‡∏¥</option>
              <option value="vegan">‡∏°‡∏±‡∏á‡∏™‡∏∞‡∏´‡∏£‡∏á (‡πÑ‡∏°‡πà‡∏Å‡∏¥‡∏ô‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏à‡∏≤‡∏Å‡∏™‡∏±‡∏ï‡∏ß‡πå)</option>
              <option value="pescatarian">‡∏Å‡∏¥‡∏ô‡∏õ‡∏•‡∏≤‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô</option>
              <option value="keto">‡∏Ñ‡∏µ‡πÇ‡∏ï</option>
              <option value="intermittent_fasting">‡∏≠‡∏î‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á</option>
              <option value="low_carb">‡∏Ñ‡∏≤‡∏£‡πå‡∏ö‡∏ï‡πà‡∏≥</option>
            </select>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏ú‡∏±‡∏Å‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô (‡∏™‡πà‡∏ß‡∏ô)
              </label>
              <input
                type="number"
                min="0"
                max="20"
                value={formData.vegetable_servings}
                onChange={(e) => handleInputChange('vegetable_servings', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                placeholder="‡πÄ‡∏ä‡πà‡∏ô 3"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô (‡∏™‡πà‡∏ß‡∏ô)
              </label>
              <input
                type="number"
                min="0"
                max="20"
                value={formData.fruit_servings}
                onChange={(e) => handleInputChange('fruit_servings', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                placeholder="‡πÄ‡∏ä‡πà‡∏ô 2"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏ô‡πâ‡∏≥‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô (‡πÅ‡∏Å‡πâ‡∏ß)
              </label>
              <input
                type="number"
                min="0"
                max="20"
                value={formData.water_intake}
                onChange={(e) => handleInputChange('water_intake', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                placeholder="‡πÄ‡∏ä‡πà‡∏ô 8"
              />
            </div>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏à‡∏≤‡∏ô‡∏î‡πà‡∏ß‡∏ô
              </label>
              <select
                value={formData.fast_food_frequency}
                onChange={(e) => handleInputChange('fast_food_frequency', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="never">‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏¥‡∏ô</option>
                <option value="rarely">‡∏ô‡∏≤‡∏ô‡πÜ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
                <option value="weekly">‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏•‡∏∞‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
                <option value="few_times_week">‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏•‡∏∞‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
                <option value="daily">‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô</option>
              </select>
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á
              </label>
              <select
                value={formData.snack_frequency}
                onChange={(e) => handleInputChange('snack_frequency', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="never">‡πÑ‡∏°‡πà‡∏Å‡∏¥‡∏ô</option>
                <option value="rarely">‡∏ô‡∏≤‡∏ô‡πÜ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
                <option value="sometimes">‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
                <option value="often">‡∏ö‡πà‡∏≠‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
                <option value="always">‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤</option>
              </select>
            </div>
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡πÇ‡∏†‡∏Ñ‡∏Ñ‡∏≤‡πÄ‡∏ü‡∏≠‡∏µ‡∏ô
            </label>
            <select
              value={formData.caffeine_intake}
              onChange={(e) => handleInputChange('caffeine_intake', e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            >
              <option value="none">‡πÑ‡∏°‡πà‡∏î‡∏∑‡πà‡∏°</option>
              <option value="low">‡∏ô‡πâ‡∏≠‡∏¢ (1-2 ‡πÅ‡∏Å‡πâ‡∏ß‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô)</option>
              <option value="moderate">‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á (3-4 ‡πÅ‡∏Å‡πâ‡∏ß‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô)</option>
              <option value="high">‡∏°‡∏≤‡∏Å (5+ ‡πÅ‡∏Å‡πâ‡∏ß‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô)</option>
            </select>
          </div>
        </div>
      </div>
    </div>
  );

  const renderStep4 = () => (
    <div className="space-y-6">
      <h3 className="text-xl font-semibold text-gray-800 mb-4 flex items-center">
        <span className="mr-2">ü§ß</span>
        ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡πâ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤
      </h3>
      
      <div className="bg-pink-50 border border-pink-200 rounded-lg p-4">
        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£
            </label>
            <textarea
              rows="2"
              value={formData.food_allergies}
              onChange={(e) => handleInputChange('food_allergies', e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡πÅ‡∏û‡πâ‡∏Å‡∏∏‡πâ‡∏á, ‡πÅ‡∏û‡πâ‡∏ñ‡∏±‡πà‡∏ß‡∏•‡∏¥‡∏™‡∏á, ‡πÅ‡∏û‡πâ‡∏ô‡∏° (‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà '‡πÑ‡∏°‡πà‡∏°‡∏µ')"
            />
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡πâ‡∏¢‡∏≤
            </label>
            <textarea
              rows="2"
              value={formData.drug_allergies}
              onChange={(e) => handleInputChange('drug_allergies', e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡πÅ‡∏û‡πâ‡πÄ‡∏û‡∏ô‡∏¥‡∏ã‡∏¥‡∏•‡∏•‡∏¥‡∏ô, ‡πÅ‡∏û‡πâ‡πÅ‡∏≠‡∏™‡πÑ‡∏û‡∏£‡∏¥‡∏ô (‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà '‡πÑ‡∏°‡πà‡∏°‡∏µ')"
            />
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡πâ‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°
            </label>
            <textarea
              rows="2"
              value={formData.environmental_allergies}
              onChange={(e) => handleInputChange('environmental_allergies', e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡πÅ‡∏û‡πâ‡∏ù‡∏∏‡πà‡∏ô, ‡πÅ‡∏û‡πâ‡πÄ‡∏Å‡∏™‡∏£‡∏î‡∏≠‡∏Å‡πÑ‡∏°‡πâ, ‡πÅ‡∏û‡πâ‡∏Ç‡∏ô‡∏™‡∏±‡∏ï‡∏ß‡πå (‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà '‡πÑ‡∏°‡πà‡∏°‡∏µ')"
            />
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡∏¢‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
            </label>
            <textarea
              rows="2"
              value={formData.current_medications}
              onChange={(e) => handleInputChange('current_medications', e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏≤‡πÅ‡∏•‡∏∞‡∏Ç‡∏ô‡∏≤‡∏î (‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà '‡πÑ‡∏°‡πà‡∏°‡∏µ')"
            />
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡∏ß‡∏¥‡∏ï‡∏≤‡∏°‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏™‡∏£‡∏¥‡∏°
            </label>
            <textarea
              rows="2"
              value={formData.supplement_usage}
              onChange={(e) => handleInputChange('supplement_usage', e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏ß‡∏¥‡∏ï‡∏≤‡∏°‡∏¥‡∏ô‡∏ã‡∏µ, ‡πÅ‡∏Ñ‡∏•‡πÄ‡∏ã‡∏µ‡∏¢‡∏°, ‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô (‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà '‡πÑ‡∏°‡πà‡∏°‡∏µ')"
            />
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß/‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤
            </label>
            <textarea
              rows="3"
              value={formData.medical_conditions}
              onChange={(e) => handleInputChange('medical_conditions', e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡∏™‡∏π‡∏á, ‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à, ‡πÇ‡∏£‡∏Ñ‡πÑ‡∏ï (‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà '‡πÑ‡∏°‡πà‡∏°‡∏µ')"
            />
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß (‡πÇ‡∏£‡∏Ñ‡∏ó‡∏≤‡∏á‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡∏Å‡∏£‡∏£‡∏°)
            </label>
            <textarea
              rows="3"
              value={formData.family_history}
              onChange={(e) => handleInputChange('family_history', e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏û‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô, ‡πÅ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡∏™‡∏π‡∏á, ‡∏ç‡∏≤‡∏ï‡∏¥‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á (‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà '‡πÑ‡∏°‡πà‡∏°‡∏µ')"
            />
          </div>
        </div>
      </div>
    </div>
  );

  const renderStep5 = () => (
    <div className="space-y-6">
      <h3 className="text-xl font-semibold text-gray-800 mb-4 flex items-center">
        <span className="mr-2">üòå</span>
        ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î‡πÅ‡∏•‡∏∞‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏à‡∏¥‡∏ï
      </h3>
      
      <div className="bg-indigo-50 border border-indigo-200 rounded-lg p-4">
        <div className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°
              </label>
              <select
                value={formData.stress_level}
                onChange={(e) => handleInputChange('stress_level', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="very_low">‡∏ï‡πà‡∏≥‡∏°‡∏≤‡∏Å</option>
                <option value="low">‡∏ï‡πà‡∏≥</option>
                <option value="moderate">‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á</option>
                <option value="high">‡∏™‡∏π‡∏á</option>
                <option value="very_high">‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å</option>
              </select>
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡∏¥‡∏ï‡∏Å‡∏Å‡∏±‡∏á‡∏ß‡∏•
              </label>
              <select
                value={formData.anxiety_frequency}
                onChange={(e) => handleInputChange('anxiety_frequency', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="never">‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢</option>
                <option value="rarely">‡∏ô‡∏≤‡∏ô‡πÜ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
                <option value="sometimes">‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
                <option value="often">‡∏ö‡πà‡∏≠‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
                <option value="always">‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤</option>
              </select>
            </div>
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î‡∏´‡∏•‡∏±‡∏Å (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠)
            </label>
            <div className="grid grid-cols-2 gap-2">
              {[
                '‡∏á‡∏≤‡∏ô/‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤',
                '‡πÄ‡∏á‡∏¥‡∏ô/‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô',
                '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå',
                '‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß',
                '‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û',
                '‡∏™‡∏±‡∏á‡∏Ñ‡∏°',
                '‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï',
                '‡∏≠‡∏∑‡πà‡∏ô‡πÜ'
              ].map(source => (
                <label key={source} className="flex items-center">
                  <input
                    type="checkbox"
                    checked={formData.stress_sources.includes(source)}
                    onChange={(e) => handleArrayInputChange('stress_sources', source, e.target.checked)}
                    className="mr-2 text-blue-600 focus:ring-blue-500"
                  />
                  <span className="text-sm">{source}</span>
                </label>
              ))}
            </div>
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠)
            </label>
            <div className="grid grid-cols-2 gap-2">
              {[
                '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢',
                '‡∏î‡∏π‡∏´‡∏ô‡∏±‡∏á/‡∏ü‡∏±‡∏á‡πÄ‡∏û‡∏•‡∏á',
                '‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠',
                '‡∏™‡∏°‡∏≤‡∏ò‡∏¥/‡πÇ‡∏¢‡∏Ñ‡∏∞',
                '‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô',
                '‡∏ô‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏ö',
                '‡∏Å‡∏¥‡∏ô/‡∏î‡∏∑‡πà‡∏°',
                '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏¥‡∏ò‡∏µ'
              ].map(mechanism => (
                <label key={mechanism} className="flex items-center">
                  <input
                    type="checkbox"
                    checked={formData.coping_mechanisms.includes(mechanism)}
                    onChange={(e) => handleArrayInputChange('coping_mechanisms', mechanism, e.target.checked)}
                    className="mr-2 text-blue-600 focus:ring-blue-500"
                  />
                  <span className="text-sm">{mechanism}</span>
                </label>
              ))}
            </div>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå
              </label>
              <select
                value={formData.mood_changes}
                onChange={(e) => handleInputChange('mood_changes', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="no">‡πÑ‡∏°‡πà‡∏°‡∏µ</option>
                <option value="mild">‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢</option>
                <option value="moderate">‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á</option>
                <option value="severe">‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á</option>
              </select>
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏≤‡∏á‡∏™‡∏±‡∏á‡∏Ñ‡∏°
              </label>
              <select
                value={formData.social_activities}
                onChange={(e) => handleInputChange('social_activities', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="very_active">‡∏≠‡∏≠‡∏Å‡∏™‡∏±‡∏á‡∏Ñ‡∏°‡∏°‡∏≤‡∏Å</option>
                <option value="active">‡∏≠‡∏≠‡∏Å‡∏™‡∏±‡∏á‡∏Ñ‡∏°‡∏ö‡πà‡∏≠‡∏¢</option>
                <option value="sometimes">‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
                <option value="rarely">‡∏ô‡∏≤‡∏ô‡πÜ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</option>
                <option value="never">‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å‡∏™‡∏±‡∏á‡∏Ñ‡∏°</option>
              </select>
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  const renderStep6 = () => (
    <div className="space-y-6">
      <h3 className="text-xl font-semibold text-gray-800 mb-4 flex items-center">
        <span className="mr-2">üéØ</span>
        ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
      </h3>
      
      <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠)
            </label>
            <div className="grid grid-cols-2 gap-2">
              {[
                '‡∏•‡∏î‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å',
                '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å',
                '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠',
                '‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏†‡∏≤‡∏û',
                '‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î',
                '‡∏ô‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏ö‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô',
                '‡πÄ‡∏•‡∏¥‡∏Å‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà',
                '‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏î‡∏∑‡πà‡∏°‡πÅ‡∏≠‡∏•‡∏Å‡∏≠‡∏Æ‡∏≠‡∏•‡πå',
                '‡∏Å‡∏¥‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô',
                '‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß',
                '‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÇ‡∏£‡∏Ñ',
                '‡∏≠‡∏∑‡πà‡∏ô‡πÜ'
              ].map(goal => (
                <label key={goal} className="flex items-center">
                  <input
                    type="checkbox"
                    checked={formData.health_goals.includes(goal)}
                    onChange={(e) => handleArrayInputChange('health_goals', goal, e.target.checked)}
                    className="mr-2 text-blue-600 focus:ring-blue-500"
                  />
                  <span className="text-sm">{goal}</span>
                </label>
              ))}
            </div>
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (3 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤)
            </label>
            <textarea
              rows="3"
              value={formData.recent_health_changes}
              onChange={(e) => handleInputChange('recent_health_changes', e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏î, ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô, ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏ô/‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢"
            />
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏â‡∏µ‡∏î‡∏ß‡∏±‡∏Ñ‡∏ã‡∏µ‡∏ô
              </label>
              <select
                value={formData.vaccination_status}
                onChange={(e) => handleInputChange('vaccination_status', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="up_to_date">‡∏Ñ‡∏£‡∏ö‡∏ï‡∏≤‡∏°‡∏Å‡∏≥‡∏´‡∏ô‡∏î</option>
                <option value="partially">‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö</option>
                <option value="none">‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏â‡∏µ‡∏î</option>
                <option value="unknown">‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö</option>
              </select>
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô
              </label>
              <input
                type="number"
                min="0"
                max="24"
                value={formData.screen_time_hours}
                onChange={(e) => handleInputChange('screen_time_hours', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                placeholder="‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á"
              />
            </div>
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠)
            </label>
            <div className="grid grid-cols-2 gap-2">
              {[
                '‡∏õ‡∏ß‡∏î‡∏´‡∏±‡∏ß',
                '‡∏õ‡∏ß‡∏î‡∏´‡∏•‡∏±‡∏á',
                '‡∏õ‡∏ß‡∏î‡∏Ñ‡∏≠/‡πÑ‡∏´‡∏•‡πà',
                '‡∏≠‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏•‡∏µ‡∏¢',
                '‡∏ô‡∏≠‡∏ô‡πÑ‡∏°‡πà‡∏´‡∏•‡∏±‡∏ö',
                '‡πÉ‡∏à‡∏™‡∏±‡πà‡∏ô',
                '‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏•‡∏≥‡∏ö‡∏≤‡∏Å',
                '‡∏ó‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢',
                '‡∏ó‡πâ‡∏≠‡∏á‡∏ú‡∏π‡∏Å',
                '‡∏ú‡∏∑‡πà‡∏ô‡πÅ‡∏û‡πâ',
                '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£',
                '‡∏≠‡∏∑‡πà‡∏ô‡πÜ'
              ].map(symptom => (
                <label key={symptom} className="flex items-center">
                  <input
                    type="checkbox"
                    checked={formData.current_symptoms.includes(symptom)}
                    onChange={(e) => handleArrayInputChange('current_symptoms', symptom, e.target.checked)}
                    className="mr-2 text-blue-600 focus:ring-blue-500"
                  />
                  <span className="text-sm">{symptom}</span>
                </label>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  const renderStepContent = () => {
    switch (currentStep) {
      case 1: return renderStep1();
      case 2: return renderStep2();
      case 3: return renderStep3();
      case 4: return renderStep4();
      case 5: return renderStep5();
      case 6: return renderStep6();
      default: return renderStep1();
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-sky-50 via-blue-50 to-white">
      <div className="max-w-4xl mx-auto px-4 py-8">
        {renderStepIndicator()}
        
        <div className="bg-white/95 backdrop-blur-lg rounded-lg p-6 border-2 border-blue-300 shadow-lg">
          {renderStepContent()}
          
          {/* Navigation Buttons */}
          <div className="flex justify-between mt-8 pt-6 border-t-2 border-gray-200">
            <div className="flex space-x-3">
              {currentStep > 1 && (
                <button
                  onClick={prevStep}
                  className="px-6 py-3 bg-gray-100 hover:bg-gray-200 text-gray-700 border-2 border-gray-300 rounded-lg transition-all duration-200 font-medium"
                >
                  ‚Üê ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
                </button>
              )}
              
              <button
                onClick={onSkip}
                className="px-6 py-3 bg-gray-50 hover:bg-gray-100 text-gray-600 border-2 border-gray-200 rounded-lg transition-all duration-200 font-medium"
              >
                ‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏õ‡∏Å‡πà‡∏≠‡∏ô
              </button>
            </div>
            
            <div>
              {currentStep < totalSteps ? (
                <button
                  onClick={nextStep}
                  className="px-6 py-3 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white border-2 border-blue-600 rounded-lg transition-all duration-200 font-medium"
                >
                  ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ‚Üí
                </button>
              ) : (
                <button
                  onClick={handleSubmit}
                  disabled={loading}
                  className="px-8 py-3 bg-gradient-to-r from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700 text-white border-2 border-green-600 rounded-lg transition-all duration-200 font-bold disabled:opacity-50"
                >
                  {loading ? (
                    <div className="flex items-center">
                      <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                        <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                      </svg>
                      ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...
                    </div>
                  ) : (
                    '‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô'
                  )}
                </button>
              )}
            </div>
          </div>
        </div>
        
        {/* Info Box */}
        <div className="mt-6 bg-yellow-50 border border-yellow-200 rounded-lg p-4">
          <div className="flex items-start">
            <span className="text-yellow-500 mr-2">üí°</span>
            <div className="text-sm text-yellow-700">
              <div className="font-medium mb-1">‡∏ó‡∏≥‡πÑ‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ?</div>
              <ul className="space-y-1 text-yellow-600">
                <li>‚Ä¢ ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ AI ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÑ‡∏î‡πâ‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô</li>
                <li>‚Ä¢ ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡∏µ‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏à‡∏≤‡∏∞‡∏à‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏Ñ‡∏∏‡∏ì</li>
                <li>‚Ä¢ ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß</li>
                <li>‚Ä¢ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default PostRegistrationAssessment;
